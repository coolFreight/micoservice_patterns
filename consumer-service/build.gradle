plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.1.1"
}

version = "0.1"
group = "consumer.service"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("consumer.service.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut:micronaut-validation")


    //database dependencies
    runtimeOnly("org.postgresql:postgresql")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbi")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation('org.jdbi:jdbi3-sqlobject:3.20.1')
            { exclude group: "com.github.ben-manes.caffeine" }
    implementation(group: 'org.jdbi', name: 'jdbi3-postgres', version: '3.20.1')
            { exclude group: "com.github.ben-manes.caffeine" }
    implementation("io.micronaut.flyway:micronaut-flyway")



    runtimeOnly("ch.qos.logback:logback-classic")

}


application {
    mainClass.set("consumer.service.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
